- name: Setup
  hosts: localhost
  tasks:
    - name: Installa podman
      package:
        name: "podman"
        state: present
    - name: Crea cartella volumi
      file:
        path: ./volumi
        state: directory
        mode: '0755'
    - name: Crea cartella HAProxy
      file:
        path: ./volumi/haproxy
        state: directory
        mode: '0755'
    - name: Crea cartella certificati HAProxy
      file:
        path: ./volumi/haproxy/certs
        state: directory
        mode: '0755'
    - name: Crea cartella dati Prometheus
      file:
        path: ./volumi/prometheus/data
        state: directory
        mode: '0755'
    - name: Crea cartella dati Grafana
      file:
        path: ./volumi/grafana/data
        state: directory
        mode: '0755'
    - name: Crea cartella config Prometheus
      file:
        path: ./volumi/prometheus/config
        state: directory
        mode: '0755'
    - name: Crea cartella config Grafana
      file:
        path: ./volumi/grafana/config
        state: directory
        mode: '0755'
    - name: Crea config Prometheus
      copy:
        dest: "./volumi/prometheus/config/prom.yml"
        content: |
          global:
            scrape_interval:  15s
            evaluation_interval:  15s

          scrape_configs:
            - job_name: 'prometheus'
              static_configs:
                - targets: ['prometheus:9090']
    - name: Crea config Grafana
      copy:
        dest: "./volumi/grafana/config/graf.yml"
        content: |
          apiVersion: 1

          datasources:
            - name: Prometheus
              type: prometheus
              access: proxy
              url: http://prometheus:9090
              isDefault: true
    - name: Creazione chiave privata
      community.crypto.openssl_privatekey:
        path: ./volumi/haproxy/certs/cert.pem.key
    - name: Generazione Certificati HAProxy
      community.crypto.x509_certificate:
        path: ./volumi/haproxy/certs/cert.pem
        privatekey_path: ./volumi/haproxy/certs/cert.pem.key
        provider: selfsigned
    - name: Crea Config HAProxy
      copy:
        dest: "./volumi/haproxy/ha.cfg"
        content: |
          global
            maxconn 20000
            ulimit-n  16384
            log 127.0.0.1 local0
            daemon
          frontend fe_https
            bind *:8443 ssl crt /usr/local/etc/haproxy/certs/cert.pem
            mode http
            log global
            option httplog
            option dontlognull
            option nolinger
            maxconn 8000
            timeout client 30s
            default_backend grafana
            acl is_grafana hdr_dom(host) -i grafana.local use_backend grafana if is_grafana
            acl is_prometheus hdr(host) -i prometheus.local use_backend prometheus if is_prometheus

          backend grafana
            mode http
            balance roundrobin
            option httpchk
            server grafana1 grafana:3000 check
          backend prometheus
            mode http
            balance roundrobin
            option httpchk
            server prometheus1 prometheus:9090 check
    - name: Creazione rete container
      containers.podman.podman_network:
        name: cnt_int
        internal: true
        ip_range: 192.168.100.128/25
        subnet: 192.168.100.0/24
        gateway: 192.168.100.1
    - name: Creo il pod per HAProxy
      containers.podman.podman_pod:
        name: soufe1
        state: created
        share: net
        hostname: soufe1
    - name: Creo il pod per Grafana e Prometheus
      containers.podman.podman_pod:
        name: soufe2
        state: created
        share: net
        hostname: soufe2
    - name: Crea container Prometheus
      containers.podman.podman_container:
        name: Prometheus
        image: prom/prometheus
        pod: soufe2
        network: cnt_int
        command: >
          --config.file=/etc/prometheus/prometheus.yml
          --storage.tsdb.path=/prometheus
        volume:
          - ./volumi/prometheus/config/prom.yml:/etc/prometheus/prometheus.yml:z
          - ./volumi/prometheus/data:/prometheus:z
        expose:
          - 9090
        ports:
          - "9090:9090"
    - name: Crea container Grafana
      containers.podman.podman_container:
        name: Grafana
        image: grafana/grafana
        pod: soufe2
        network: cnt_int
        volume:
          - ./volumi/grafana/data:/var/lib/grafana:z
          - ./volumi/grafana/config/:/etc/grafana/provisioning/:z
        expose:
          - 3000
        ports:
          - "3000:3000"
    - name: Crea istanza HAProxy
      containers.podman.podman_container:
        name: HAProxy
        image: haproxy:latest
        pod: soufe1
        network: cnt_int
        volume:
          - ./volumi/haproxy/ha.cfg:/usr/local/etc/haproxy/haproxy.cfg:z
          - ./volumi/haproxy/certs/:/usr/local/etc/haproxy/certs/:z
        command: >
          -f /usr/local/etc/haproxy/haproxy.cfg
        expose:
          - 8443
        ports:
          - "8443:8443"
